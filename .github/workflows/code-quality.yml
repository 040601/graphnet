# This is a simple workflow to check that all modified files satisfy code
# quality requirements
name: Code quality

# Controls when the workflow will run
on:
  # Triggers the workflow on push and PRs
  push:
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  files:
    runs-on: ubuntu-latest
    outputs:
      all: ${{ steps.setvar.outputs.all }}
      python: ${{ steps.setvar.outputs.python }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v34

      - name: Save to output
        id: setvar
        run: |
          all_files="${{ steps.changed-files.outputs.all_changed_files }}"
          python_files="$(grep -ow '[^ ]*\.py[^ ]*' <<<'${{ steps.changed-files.outputs.all_changed_files }}' | tr '\n' ' ')"

          echo all="$all_files" >> $GITHUB_OUTPUT
          echo python="$python_files" >> $GITHUB_OUTPUT

  black:
    needs: [ files ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install package
        uses: ./.github/actions/install-cpu
      - name: Run black
        run: |
          pre-commit run black --files ${{ needs.files.outputs.python }}

  flake8:
    needs: [ files ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install package
        uses: ./.github/actions/install-cpu
      - name: Run flake8
        run: |
          pre-commit run flake8 --files ${{ needs.files.outputs.python }}

  docformatter:
    needs: [ files ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install package
        uses: ./.github/actions/install-cpu
      - name: Run docformatter
        run: |
          pre-commit run docformatter --files ${{ needs.files.outputs.python }}

  pydocstyle:
    needs: [ files ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install package
        uses: ./.github/actions/install-cpu
      - name: Run pydocstyle
        run: |
          pre-commit run pydocstyle --files ${{ needs.files.outputs.python }}

  mypy:
    needs: [ files ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install package
        uses: ./.github/actions/install-cpu
      - name: Run mypy
        run: |
          pre-commit run mypy --files ${{ needs.files.outputs.python }}